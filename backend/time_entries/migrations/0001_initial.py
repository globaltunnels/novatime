# Generated by Django 4.2.7 on 2025-08-28 19:08

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import time_entries.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
        ("projects", "0001_initial"),
        ("tasks", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TimeEntry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Calculated duration in minutes",
                        null=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_billable", models.BooleanField(default=True)),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("manual", "Manual"),
                            ("timer", "Timer"),
                            ("import", "Import"),
                            ("ai_generated", "AI Generated"),
                            ("calendar_sync", "Calendar Sync"),
                        ],
                        default="manual",
                        max_length=20,
                    ),
                ),
                ("is_running", models.BooleanField(default=False)),
                ("is_locked", models.BooleanField(default=False)),
                ("ai_generated", models.BooleanField(default=False)),
                (
                    "ai_confidence",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "ai_source_data",
                    models.JSONField(default=time_entries.models.default_dict),
                ),
                ("external_id", models.CharField(blank=True, max_length=255)),
                ("external_source", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_entries",
                        to="projects.project",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="time_entries",
                        to="tasks.task",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_entries",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_entries",
                        to="organizations.workspace",
                    ),
                ),
            ],
            options={
                "db_table": "time_entries",
            },
        ),
        migrations.CreateModel(
            name="Timer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_running", models.BooleanField(default=True)),
                ("is_paused", models.BooleanField(default=False)),
                ("paused_at", models.DateTimeField(blank=True, null=True)),
                ("total_pause_duration", models.PositiveIntegerField(default=0)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("idle_threshold_minutes", models.PositiveIntegerField(default=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "time_entry",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timer",
                        to="time_entries.timeentry",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="active_timer",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "timers",
            },
        ),
        migrations.CreateModel(
            name="TimeEntryCorrection",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("field_changed", models.CharField(max_length=100)),
                ("old_value", models.JSONField()),
                ("new_value", models.JSONField()),
                ("reason", models.TextField(blank=True)),
                ("requires_approval", models.BooleanField(default=False)),
                ("is_approved", models.BooleanField(default=False)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_corrections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "corrected_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="time_corrections",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "time_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="corrections",
                        to="time_entries.timeentry",
                    ),
                ),
            ],
            options={
                "db_table": "time_entry_corrections",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TimeEntryBreak",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "break_type",
                    models.CharField(
                        choices=[
                            ("lunch", "Lunch"),
                            ("coffee", "Coffee Break"),
                            ("meeting", "Meeting"),
                            ("personal", "Personal"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "time_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="breaks",
                        to="time_entries.timeentry",
                    ),
                ),
            ],
            options={
                "db_table": "time_entry_breaks",
            },
        ),
        migrations.CreateModel(
            name="IdleTime",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "duration_minutes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "detection_method",
                    models.CharField(
                        choices=[
                            ("mouse_keyboard", "Mouse/Keyboard Inactivity"),
                            ("manual", "Manual Report"),
                            ("ai_detection", "AI Detection"),
                        ],
                        default="mouse_keyboard",
                        max_length=50,
                    ),
                ),
                (
                    "action_taken",
                    models.CharField(
                        choices=[
                            ("keep", "Keep Time"),
                            ("discard", "Discard Time"),
                            ("pending", "Pending Decision"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "time_entry",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="idle_periods",
                        to="time_entries.timeentry",
                    ),
                ),
            ],
            options={
                "db_table": "idle_times",
            },
        ),
        migrations.CreateModel(
            name="BulkTimeOperation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "operation_type",
                    models.CharField(
                        choices=[
                            ("import", "Import"),
                            ("export", "Export"),
                            ("bulk_edit", "Bulk Edit"),
                            ("ai_generation", "AI Generation"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("total_entries", models.PositiveIntegerField(default=0)),
                ("processed_entries", models.PositiveIntegerField(default=0)),
                ("failed_entries", models.PositiveIntegerField(default=0)),
                (
                    "result_data",
                    models.JSONField(default=time_entries.models.default_dict),
                ),
                ("file_url", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bulk_operations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bulk_operations",
                        to="organizations.workspace",
                    ),
                ),
            ],
            options={
                "db_table": "bulk_time_operations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddIndex(
            model_name="timeentry",
            index=models.Index(
                fields=["user", "start_time"], name="time_entrie_user_id_766f71_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="timeentry",
            index=models.Index(
                fields=["project", "start_time"], name="time_entrie_project_70a6ca_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="timeentry",
            index=models.Index(
                fields=["workspace", "start_time"],
                name="time_entrie_workspa_cb67e4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="timeentry",
            index=models.Index(
                fields=["is_running"], name="time_entrie_is_runn_a70bc6_idx"
            ),
        ),
    ]
