# Generated by Django 4.2.7 on 2025-08-28 23:26

import chat.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("organizations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ChatMention",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "chat_mentions",
            },
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("file", "File"),
                            ("image", "Image"),
                            ("system", "System"),
                            ("mention", "Mention"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                (
                    "content",
                    models.TextField(
                        validators=[django.core.validators.MaxLengthValidator(4000)]
                    ),
                ),
                ("formatted_content", models.TextField(blank=True)),
                ("attachment_url", models.URLField(blank=True)),
                ("attachment_name", models.CharField(blank=True, max_length=255)),
                ("attachment_size", models.PositiveIntegerField(blank=True, null=True)),
                ("attachment_type", models.CharField(blank=True, max_length=100)),
                ("is_edited", models.BooleanField(default=False)),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("thread_count", models.PositiveIntegerField(default=0)),
                ("metadata", models.JSONField(default=chat.models.default_dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "mentions",
                    models.ManyToManyField(
                        related_name="mentioned_in_chats",
                        through="chat.ChatMention",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent_message",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="replies",
                        to="chat.chatmessage",
                    ),
                ),
            ],
            options={
                "db_table": "chat_messages",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ChatRoom",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "room_type",
                    models.CharField(
                        choices=[
                            ("workspace", "Workspace"),
                            ("project", "Project"),
                            ("direct", "Direct Message"),
                            ("team", "Team"),
                        ],
                        max_length=20,
                    ),
                ),
                ("room_id", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("is_private", models.BooleanField(default=False)),
                ("is_archived", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_message_at", models.DateTimeField(blank=True, null=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_chat_rooms",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_message_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="last_chat_rooms",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_rooms",
                        to="organizations.workspace",
                    ),
                ),
            ],
            options={
                "db_table": "chat_rooms",
            },
        ),
        migrations.CreateModel(
            name="ChatReaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("emoji", models.CharField(max_length=10)),
                ("emoji_name", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reactions",
                        to="chat.chatmessage",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_reactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "chat_reactions",
            },
        ),
        migrations.CreateModel(
            name="ChatNotification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("message", "New Message"),
                            ("mention", "Mentioned"),
                            ("reaction", "Reaction"),
                            ("thread_reply", "Thread Reply"),
                            ("room_invite", "Room Invitation"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("is_read", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="chat.chatmessage",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="chat.chatroom",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "chat_notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="room",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="chat.chatroom",
            ),
        ),
        migrations.AddField(
            model_name="chatmessage",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chat_messages",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="chatmention",
            name="message",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="mention_records",
                to="chat.chatmessage",
            ),
        ),
        migrations.AddField(
            model_name="chatmention",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="chat_mention_records",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="ChatRoomMembership",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("member", "Member"),
                            ("moderator", "Moderator"),
                            ("admin", "Admin"),
                        ],
                        default="member",
                        max_length=20,
                    ),
                ),
                ("can_post", models.BooleanField(default=True)),
                ("can_invite", models.BooleanField(default=False)),
                ("notifications_enabled", models.BooleanField(default=True)),
                ("mention_notifications", models.BooleanField(default=True)),
                ("last_read_at", models.DateTimeField(blank=True, null=True)),
                ("last_active_at", models.DateTimeField(blank=True, null=True)),
                ("joined_at", models.DateTimeField(auto_now_add=True)),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="chat.chatroom",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="chat_room_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "chat_room_memberships",
                "indexes": [
                    models.Index(
                        fields=["user", "last_read_at"],
                        name="chat_room_m_user_id_492637_idx",
                    )
                ],
                "unique_together": {("room", "user")},
            },
        ),
        migrations.AddIndex(
            model_name="chatroom",
            index=models.Index(
                fields=["workspace", "room_type"], name="chat_rooms_workspa_657517_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatroom",
            index=models.Index(
                fields=["last_message_at"], name="chat_rooms_last_me_a06a9d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chatroom",
            unique_together={("room_type", "room_id", "workspace")},
        ),
        migrations.AddIndex(
            model_name="chatreaction",
            index=models.Index(
                fields=["message", "emoji"], name="chat_reacti_message_b838d4_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chatreaction",
            unique_together={("message", "user", "emoji")},
        ),
        migrations.AddIndex(
            model_name="chatnotification",
            index=models.Index(
                fields=["user", "is_read", "-created_at"],
                name="chat_notifi_user_id_a7cdaf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="chatnotification",
            index=models.Index(
                fields=["room", "-created_at"], name="chat_notifi_room_id_90f148_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["room", "-created_at"], name="chat_messag_room_id_584819_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["user", "-created_at"], name="chat_messag_user_id_790302_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chatmessage",
            index=models.Index(
                fields=["parent_message"], name="chat_messag_parent__f12578_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chatmention",
            unique_together={("message", "user")},
        ),
    ]
