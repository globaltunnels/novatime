# Generated by Django 4.2.7 on 2025-08-28 19:08

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import timesheets.models
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("organizations", "0001_initial"),
        ("tasks", "0001_initial"),
        ("projects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("time_entries", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Timesheet",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("weekly", "Weekly"),
                            ("bi_weekly", "Bi-weekly"),
                            ("monthly", "Monthly"),
                        ],
                        default="weekly",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("submitted", "Submitted"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("locked", "Locked"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "total_hours",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "billable_hours",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "overtime_hours",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                ("ai_generated", models.BooleanField(default=False)),
                (
                    "ai_confidence",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("ai_suggestions_count", models.PositiveIntegerField(default=0)),
                ("ai_accepted_count", models.PositiveIntegerField(default=0)),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("rejection_reason", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_timesheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "submitted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="submitted_timesheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheets",
                        to="organizations.workspace",
                    ),
                ),
            ],
            options={
                "db_table": "timesheets",
            },
        ),
        migrations.CreateModel(
            name="TimesheetReminder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "reminder_type",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("overdue", "Overdue"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("dismissed", "Dismissed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("scheduled_for", models.DateTimeField()),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("subject", models.CharField(max_length=255)),
                ("message", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "timesheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reminders",
                        to="timesheets.timesheet",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheet_reminders",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "timesheet_reminders",
            },
        ),
        migrations.CreateModel(
            name="TimesheetTemplate",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "template_data",
                    models.JSONField(default=timesheets.models.default_dict),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("use_count", models.PositiveIntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheet_templates",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheet_templates",
                        to="organizations.workspace",
                    ),
                ),
            ],
            options={
                "db_table": "timesheet_templates",
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="TimesheetException",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "exception_type",
                    models.CharField(
                        choices=[
                            ("overtime", "Overtime Hours"),
                            ("missing_time", "Missing Time"),
                            ("duplicate_entry", "Duplicate Entry"),
                            ("rate_mismatch", "Rate Mismatch"),
                            ("policy_violation", "Policy Violation"),
                            ("ai_flagged", "AI Flagged"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("resolved", "Resolved"),
                            ("dismissed", "Dismissed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("ai_detected", models.BooleanField(default=False)),
                (
                    "ai_confidence",
                    models.FloatField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_exceptions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "timesheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="exceptions",
                        to="timesheets.timesheet",
                    ),
                ),
            ],
            options={
                "db_table": "timesheet_exceptions",
                "indexes": [
                    models.Index(
                        fields=["timesheet", "status"],
                        name="timesheet_e_timeshe_59298b_idx",
                    ),
                    models.Index(
                        fields=["severity", "status"],
                        name="timesheet_e_severit_aa3dde_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TimesheetEntry",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "hours",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=6,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_billable", models.BooleanField(default=True)),
                (
                    "hourly_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheet_entries",
                        to="projects.project",
                    ),
                ),
                (
                    "source_time_entries",
                    models.ManyToManyField(
                        blank=True,
                        related_name="timesheet_entries",
                        to="time_entries.timeentry",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="timesheet_entries",
                        to="tasks.task",
                    ),
                ),
                (
                    "timesheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="entries",
                        to="timesheets.timesheet",
                    ),
                ),
            ],
            options={
                "db_table": "timesheet_entries",
                "unique_together": {("timesheet", "date", "project", "task")},
            },
        ),
        migrations.CreateModel(
            name="TimesheetApproval",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("changes_requested", "Changes Requested"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("comments", models.TextField(blank=True)),
                (
                    "approved_hours",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("decided_at", models.DateTimeField(blank=True, null=True)),
                (
                    "approver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timesheet_approvals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "timesheet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="approvals",
                        to="timesheets.timesheet",
                    ),
                ),
            ],
            options={
                "db_table": "timesheet_approvals",
                "unique_together": {("timesheet", "approver")},
            },
        ),
        migrations.AddIndex(
            model_name="timesheet",
            index=models.Index(
                fields=["user", "start_date"], name="timesheets_user_id_54c22f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="timesheet",
            index=models.Index(
                fields=["workspace", "status"], name="timesheets_workspa_a4c72b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="timesheet",
            index=models.Index(
                fields=["status", "submitted_at"], name="timesheets_status_b7d87f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="timesheet",
            unique_together={("user", "start_date", "end_date")},
        ),
    ]
