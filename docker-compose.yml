version: '3.8'

services:
  db:
    image: postgis/postgis:15-3.3
    environment:
      POSTGRES_DB: novatime
      POSTGRES_USER: novatime
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U novatime"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    working_dir: /app/backend
    environment:
      DEBUG: 'True'
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
      ALLOWED_HOSTS: localhost,127.0.0.1,0.0.0.0
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./backend/media:/app/backend/media
      - ./backend/static:/app/backend/static
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000

  celery:
    build: .
    working_dir: /app/backend
    environment:
      DEBUG: 'True'
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A backend.project-settings.settings worker --loglevel=info

  celery-beat:
    build: .
    working_dir: /app/backend
    environment:
      DEBUG: 'True'
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: dev-secret-key-change-in-production
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A backend.project-settings.settings beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler

volumes:
  postgres_data:
  redis_data: